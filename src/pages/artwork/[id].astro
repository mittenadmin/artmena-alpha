---
import "../../styles/index.css";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PageHero from "../../components/PageHero.astro";
import CardList from "../../components/Cards/CardList.astro";

export interface ArtworkData {
  id: string;
  name: string;
  artist: string;
  date: string;
  category: string;
  medium: string;
  dimensions: string;
  price: string;
  imageSrc: string;
  imageAlt: string;
  artwork: {
    id: string;
    title: string;
    category: string;
    imageSrc: string;
    imageAlt: string;
    price: string;
  }[];
}

export const artwork: ArtworkData = {
  id: "artist-001",
  name: "Paint on Canvas",
  artist: "Marina Delacroix",
  date: "October 2020",
  category: "Abstract",
  medium: "Canvas",
  dimensions: "150cm x 200cm",
  price: "$1000.00",
  imageSrc:
    "https://images.unsplash.com/photo-1541961017774-22349e4a1262?w=400&h=400&fit=crop",
  imageAlt:
    "Portrait of Marina Delacroix, a woman with dark hair wearing a paint-splattered apron in her studio",
  artwork: [
    {
      id: "artwork-001",
      title: "Urban Symphony",
      category: "Mixed Media",
      imageSrc:
        "https://images.unsplash.com/photo-1541961017774-22349e4a1262?w=600&h=800&fit=crop",
      imageAlt:
        "Abstract mixed media artwork featuring vibrant colors and urban textures",
      price: "$350.00",
    },
    {
      id: "artwork-002",
      title: "Reflections in Blue",
      category: "Oil Painting",
      imageSrc:
        "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=600&h=800&fit=crop",
      imageAlt:
        "Oil painting with various shades of blue depicting water reflections",
      price: "$350.00",
    },
    {
      id: "artwork-003",
      title: "Digital Dreams",
      category: "Digital Art",
      imageSrc:
        "https://images.unsplash.com/photo-1549490349-8643362247b5?w=600&h=800&fit=crop",
      imageAlt: "Digital artwork with geometric patterns and neon colors",
      price: "$350.00",
    },
    {
      id: "artwork-004",
      title: "City Pulse",
      category: "Acrylic",
      imageSrc:
        "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=600&h=800&fit=crop",
      imageAlt:
        "Acrylic painting capturing the energy and movement of city life",
      price: "$350.00",
    },
    {
      id: "artwork-005",
      title: "Metamorphosis",
      category: "Sculpture",
      imageSrc:
        "https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=600&h=800&fit=crop",
      imageAlt:
        "Contemporary sculpture exploring themes of transformation and growth",
      price: "$350.00",
    },
  ],
};
export async function getStaticPaths() {
  return [{ params: { id: "1" } }, { params: { id: "1" } }];
}
---

<BaseLayout title={`artmena/ ${artwork.name}`}>
  <div class="min-h-screen">
    <PageHero subtitle={"Insights On"} title={artwork.name} />
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="flex justify-center">
        {/* Image Section */}
        <div class={`w-1/2 me-auto grid grid-cols-3 gap-4 gap-x-8`}>
          <img
            src={artwork.imageSrc}
            alt={artwork.imageAlt}
            class="w-full aspect-[6/5] object-cover col-span-3 row-span-1"
          />
          <img
            src={artwork.imageSrc}
            alt={artwork.imageAlt}
            class="aspect-[6/5] object-cover"
          />
          <img
            src={artwork.imageSrc}
            alt={artwork.imageAlt}
            class="aspect-[6/5] object-cover"
          />
          <img
            src={artwork.imageSrc}
            alt={artwork.imageAlt}
            class="aspect-[6/5] object-cover"
          />
        </div>
        <div class="py-4 pl-12 w-1/2">
          <h1>{artwork.name}</h1>
          <h1>{artwork.artist}</h1>
          <div>
            <h2>Medium</h2>
            <h2>{artwork.medium}</h2>
          </div>
          <div>
            <h2>Dimensions</h2>
            <h2>{artwork.dimensions}</h2>
          </div>
          <div>
            <h2>Date</h2>
            <h2>{artwork.date}</h2>
          </div>
          <div>
            <h2>Further Info</h2>
            <h2>{artwork.name}</h2>
          </div>
          <div>
            <h2>Price</h2>
            <h2>{artwork.price}</h2>
          </div>
        </div>
      </div>
    </div>

    <div class="border-t border-b border-primary">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex">
        {/* mini nav bar*/}
        <div
          id="nav-artworks"
          data-section="artworks"
          class="w-1/4 border-b-2 border-primary hover:border-primary mr-8 py-4 cursor-pointer nav-item active ps-2"
        >
          More From This Artist
        </div>
        <div
          id="nav-exhibitions"
          data-section="exhibitions"
          class="w-1/4 border-b-2 border-transparent hover:border-primary mr-8 py-4 cursor-pointer nav-item ps-2"
        >
          Exhibitions
        </div>
      </div>
    </div>
    {/* Artworks section */}
    <div id="section-artworks" class="section-content">
      <CardList objectType="artwork" cards={artwork.artwork} maxRows={1} />
    </div>

    {/* Exhibitions section */}
    <div id="section-exhibitions" class="section-content hidden"></div>
  </div>
</BaseLayout>

<script>
  function initializeNavigation() {
    const navItems = document.querySelectorAll(".nav-item");
    const sections = document.querySelectorAll(".section-content");

    // Remove any existing event listeners to prevent duplicates
    navItems.forEach((item) => {
      const newItem = item.cloneNode(true);
      item.parentNode?.replaceChild(newItem, item);
    });

    // Get the updated node list after cloning
    const updatedNavItems = document.querySelectorAll(".nav-item");

    updatedNavItems.forEach((item) => {
      item.addEventListener("click", () => {
        const targetSection = (item as HTMLElement).dataset.section;

        // Remove active class from all nav items
        updatedNavItems.forEach((nav) => {
          nav.classList.remove("active");
          nav.classList.remove("border-primary");
          nav.classList.add("border-transparent");
        });

        // Add active class to clicked nav item
        item.classList.add("active");
        item.classList.add("border-primary");
        item.classList.remove("border-transparent");

        // Hide all sections
        sections.forEach((section) => {
          section.classList.add("hidden");
        });

        // Show the target section
        const targetElement = document.getElementById(
          `section-${targetSection}`,
        );
        if (targetElement) {
          targetElement.classList.remove("hidden");
        }
      });
    });
  }

  // Initialize on page load
  document.addEventListener("DOMContentLoaded", initializeNavigation);

  // Initialize on Astro page transitions
  document.addEventListener("astro:page-load", initializeNavigation);

  // Fallback: also initialize immediately if DOM is already ready
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initializeNavigation);
  } else {
    initializeNavigation();
  }
</script>
